{
  "output": "The output will be a list of Task-Agnostic Steps (TAS) that are required to achieve the high-level goal of weaving a tool from two distinct sources: SYS and TEMPLATE source.",
  "files": [
    {
      "name": "task_agnostic_steps.json",
      "content": "[{\"id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\", \"name\": \"Identify Source Components\", \"description\": \"Determine and catalog the distinct parts, functionalities, or data structures present in both the SYS and TEMPLATE sources.\", \"category\": \"Analysis\", \"purpose\": \"To understand the constituent elements of each source before integration, ensuring all necessary pieces are accounted for.\", \"keywords\": [\"source analysis\", \"component identification\", \"discovery\"], \"applicability_notes\": \"Relevant when combining or leveraging multiple existing systems, libraries, or data formats.\", \"examples_of_usage\": [\"Analyzing a legacy system and a new API for integration.\", \"Understanding a configuration file and a code library for a new feature.\"], \"typical_inputs\": [\"Description of SYS source\", \"Description of TEMPLATE source\"], \"typical_outputs\": [\"List of components in SYS source\", \"List of components in TEMPLATE source\"]}, {\"id\": \"b2c3d4e5-f6a7-8901-2345-67890abcdef1\", \"name\": \"Define Integration Strategy\", \"description\": \"Outline the method and approach for combining the identified components from the SYS and TEMPLATE sources into a cohesive whole.\", \"category\": \"Planning\", \"purpose\": \"To establish a clear roadmap for how the two sources will be merged, minimizing conflicts and maximizing synergy.\", \"keywords\": [\"integration plan\", \"strategy\", \"combination approach\"], \"applicability_notes\": \"Essential for any project involving the merging of disparate systems or data.\", \"examples_of_usage\": [\"Planning how to integrate a microservice with an existing monolithic application.\", \"Deciding on the architecture for combining user data from two different platforms.\"], \"typical_inputs\": [\"List of components in SYS source\", \"List of components in TEMPLATE source\"], \"typical_outputs\": [\"Integration strategy document\", \"High-level architecture diagram\"]}, {\"id\": \"c3d4e5f6-a7b8-9012-3456-7890abcdef12\", \"name\": \"Establish Data Mapping\", \"description\": \"Define how data elements or structures from the SYS source correspond to or will be transformed for use with the TEMPLATE source, and vice versa.\", \"category\": \"Planning\", \"purpose\": \"To ensure that information can flow correctly and meaningfully between the two sources during the weaving process.\", \"keywords\": [\"data mapping\", \"transformation rules\", \"schema alignment\"], \"applicability_notes\": \"Crucial when sources have different data formats or schemas that need to be reconciled.\", \"examples_of_usage\": [\"Mapping fields between a CSV file and a database table.\", \"Defining transformations for API data to fit a UI component.\"], \"typical_inputs\": [\"List of components in SYS source\", \"List of components in TEMPLATE source\", \"Integration strategy document\"], \"typical_outputs\": [\"Data mapping specifications\", \"Transformation logic definitions\"]}, {\"id\": \"d4e5f6a7-b8c9-0123-4567-890abcdef123\", \"name\": \"Develop Interface Logic\", \"description\": \"Create the mechanisms and code that allow the SYS and TEMPLATE sources to interact and exchange information as defined by the integration strategy and data mapping.\", \"category\": \"Execution\", \"purpose\": \"To build the connective tissue that enables the two sources to function together as a single tool.\", \"keywords\": [\"interface development\", \"interaction logic\", \"API implementation\"], \"applicability_notes\": \"Applicable when building bridges or communication layers between different software components or systems.\", \"examples_of_usage\": [\"Writing adapter code to connect two different libraries.\", \"Implementing an API endpoint to serve data from a database.\"], \"typical_inputs\": [\"Integration strategy document\", \"Data mapping specifications\"], \"typical_outputs\": [\"Interface code\", \"Interaction modules\"]}, {\"id\": \"e5f6a7b8-c9d0-1234-5678-90abcdef1234\", \"name\": \"Implement Core Weaving Functionality\", \"description\": \"Build the primary logic that combines elements from both SYS and TEMPLATE sources to form the new tool, utilizing the developed interface logic.\", \"category\": \"Execution\", \"purpose\": \"To construct the central functionality of the tool by merging the capabilities of the two distinct sources.\", \"keywords\": [\"core logic\", \"tool construction\", \"feature implementation\"], \"applicability_notes\": \"The central task in any project aiming to create something new by combining existing parts.\", \"examples_of_usage\": [\"Writing the main application logic that uses components from two different frameworks.\", \"Developing a feature that aggregates data from multiple external services.\"], \"typical_inputs\": [\"Interface code\", \"Interaction modules\", \"Data mapping specifications\"], \"typical_outputs\": [\"Core tool logic\", \"Integrated functionalities\"]}, {\"id\": \"f6a7b8c9-d0e1-2345-6789-0abcdef12345\", \"name\": \"Validate Integrated Tool\", \"description\": \"Test the newly woven tool to ensure it functions as intended, correctly incorporating elements from both SYS and TEMPLATE sources and meeting defined requirements.\", \"category\": \"Review\", \"purpose\": \"To verify the successful integration and functionality of the tool, ensuring it meets quality standards and objectives.\", \"keywords\": [\"testing\", \"validation\", \"quality assurance\"], \"applicability_notes\": \"A critical step in any development process to ensure the final product is reliable and correct.\", \"examples_of_usage\": [\"Performing unit tests on integrated components.\", \"Conducting end-to-end testing of a combined system.\"], \"typical_inputs\": [\"Core tool logic\", \"Test cases\", \"Requirements documentation\"], \"typical_outputs\": [\"Test results\", \"Bug reports\", \"Validated tool\"]}]"
    }
  ]
}