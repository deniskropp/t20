{
  "script_description": "Python script to package validated TAS data into JSONL format for LLM fine-tuning.",
  "script_name": "package_dataset.py",
  "language": "Python",
  "dependencies": [
    "json"
  ],
  "script_content": "import json\nimport sys\n\ndef create_jsonl_dataset(data):\n    \"\"\"Formats a list of dictionaries into JSONL format.\"\"\"\n    jsonl_lines = []\n    for entry in data:\n        try:\n            # Ensure the completion is a list of strings, as per schema\n            if not isinstance(entry.get('completion'), list):\n                print(f\"Warning: 'completion' is not a list for entry: {entry.get('prompt', 'N/A')[:50]}... Skipping.\", file=sys.stderr)\n                continue\n            \n            # Validate that all items in completion are strings\n            if not all(isinstance(item, str) for item in entry['completion']):\n                print(f\"Warning: 'completion' contains non-string items for entry: {entry.get('prompt', 'N/A')[:50]}... Skipping.\", file=sys.stderr)\n                continue\n\n            jsonl_lines.append(json.dumps(entry))\n        except Exception as e:\n            print(f\"Error processing entry: {entry}. Error: {e}\", file=sys.stderr)\n    return '\\n'.join(jsonl_lines)\n\ndef main():\n    # In a real-world scenario, this data would be fetched from the database\n    # or passed as a command-line argument/file input.\n    # For this example, we'll use the provided validated data.\n    validated_data = [\n      {\n        \"prompt\": \"Our company aims to launch a new online course platform by the end of Q3 to expand our educational offerings and reach a global audience.\",\n        \"completion\": [\n          \"Conduct market research for online course platforms.\",\n          \"Define target audience and learning objectives.\",\n          \"Outline core features and technical requirements.\",\n          \"Develop a content strategy and curriculum framework.\",\n          \"Establish a project timeline and resource allocation plan.\",\n          \"Identify potential technology stack and third-party integrations.\",\n          \"Plan for user experience (UX) and user interface (UI) design.\",\n          \"Develop a marketing and launch strategy.\",\n          \"Establish metrics for success and post-launch evaluation.\"\n        ]\n      },\n      {\n        \"prompt\": \"I want to learn to play the guitar proficiently within six months to be able to perform a few songs.\",\n        \"completion\": [\n          \"Define 'proficient' and specific performance goals.\",\n          \"Acquire a suitable guitar and necessary accessories.\",\n          \"Identify reputable learning resources (teachers, online courses, books).\",\n          \"Establish a consistent practice schedule.\",\n          \"Learn basic chords, scales, and music theory.\",\n          \"Practice chosen songs regularly.\",\n          \"Seek feedback on playing technique and progress.\",\n          \"Refine performance skills for selected songs.\"\n        ]\n      },\n      {\n        \"prompt\": \"Develop a community garden project for our neighborhood.\",\n        \"completion\": [\n          \"Assess neighborhood interest and potential locations.\",\n          \"Form a core planning committee.\",\n          \"Research local regulations and obtain necessary permits.\",\n          \"Secure funding and resources.\",\n          \"Design the garden layout and infrastructure.\",\n          \"Prepare the garden site.\",\n          \"Recruit volunteers for planting and maintenance.\",\n          \"Establish garden rules and management protocols.\",\n          \"Organize a community garden opening event.\"\n        ]\n      },\n      {\n        \"prompt\": \"Write a compelling short story for a local writing competition.\",\n        \"completion\": [\n          \"Understand competition rules and theme.\",\n          \"Brainstorm story ideas and plot concepts.\",\n          \"Develop characters and setting.\",\n          \"Outline the story structure.\",\n          \"Write the first draft of the story.\",\n          \"Self-edit for clarity, coherence, and impact.\",\n          \"Seek feedback from beta readers or writing group.\",\n          \"Revise the story based on feedback.\",\n          \"Proofread for grammar, spelling, and punctuation.\",\n          \"Format the story according to submission guidelines.\"\n        ]\n      }\n    ]\n\n    jsonl_output = create_jsonl_dataset(validated_data)\n\n    # Output the JSONL data to standard output\n    print(jsonl_output)\n\nif __name__ == \"__main__\":\n    main()\n",
  "deployment_notes": "This script is designed to be run in a Python environment. It can be executed from the command line. For integration with the backend, the FastAPI application would call this script or a similar function to generate the JSONL file for export. The output can be redirected to a file (e.g., `python package_dataset.py > dataset.jsonl`).",
  "validation_steps": [
    "Ensure all entries in the input data conform to the expected schema (presence of 'prompt' and 'completion').",
    "Verify that the 'completion' field is always a list of strings.",
    "Check that the output is a valid JSONL file, with each line being a valid JSON object.",
    "Confirm that no extra text or formatting is present outside the JSON objects.",
    "The script includes basic error handling for malformed entries."
  ],
  "example_usage": "python package_dataset.py > final_dataset.jsonl"
}