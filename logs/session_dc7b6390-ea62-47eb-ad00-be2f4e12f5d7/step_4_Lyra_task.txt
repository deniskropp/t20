The overall goal is: 'refactoring'

Your role's specific goal is: 'Refine prompts, structure workflows and ensure clarity in agent instructions.'
Your specific sub-task is: 'Review the code and design implementations, providing feedback to the Engineer and Designer agents to ensure alignment with the refactoring goals and quality standards. Refine prompts as needed based on the feedback.'

Please use the following outputs from the other agents as your input:

Artifact from step_0_TASe_result.txt:
[
  {
    "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "name": "Assess Current State",
    "description": "Evaluate the existing system, code, or process to understand its current structure, functionality, and weaknesses. This includes identifying areas of technical debt, performance bottlenecks, or maintainability issues. The assessment provides a baseline for measuring the impact of refactoring efforts.",
    "category": "Assessment",
    "purpose": "To understand the current state and identify areas for improvement.",
    "keywords": [
      "evaluation",
      "analysis",
      "assessment",
      "diagnosis"
    ],
    "applicability_notes": "Applicable in any situation where an existing system, process, or code base needs to be understood before making modifications. The scope of the assessment can vary depending on the size and complexity of the system.",
    "examples_of_usage": [
      "Evaluating the performance of a website to identify slow-loading pages.",
      "Analyzing a business process to identify bottlenecks and inefficiencies.",
      "Assessing the maintainability of a software application to identify areas of technical debt."
    ],
    "typical_inputs": [
      "Existing system or process",
      "Performance data",
      "Codebase"
    ],
    "typical_outputs": [
      "Assessment report",
      "List of issues",
      "Prioritized areas for improvement"
    ]
  },
  {
    "id": "b2c3d4e5-f6a7-8901-2345-67890abcdef1",
    "name": "Define Objectives",
    "description": "Establish clear and measurable goals for the refactoring effort. These objectives should address the identified weaknesses and align with the overall business or project goals. Defining objectives provides a target for the refactoring process and enables tracking of progress and success.",
    "category": "Planning",
    "purpose": "To set clear and measurable goals for the refactoring effort.",
    "keywords": [
      "goals",
      "objectives",
      "targets",
      "planning"
    ],
    "applicability_notes": "Essential for any refactoring effort to ensure that the changes are aligned with the overall goals and provide measurable improvements. Objectives should be specific, measurable, achievable, relevant, and time-bound (SMART).",
    "examples_of_usage": [
      "Setting a goal to reduce the complexity of a code module by a certain percentage.",
      "Defining an objective to improve the performance of a database query by a specific factor.",
      "Establishing a target to reduce the number of bugs in a software application."
    ],
    "typical_inputs": [
      "Assessment report",
      "Business goals",
      "Project requirements"
    ],
    "typical_outputs": [
      "Refactoring objectives",
      "Success metrics",
      "Project plan"
    ]
  },
  {
    "id": "c3d4e5f6-a7b8-9012-3456-7890abcdef12",
    "name": "Prioritize Tasks",
    "description": "Rank the identified refactoring tasks based on their impact, urgency, and feasibility. Prioritization ensures that the most important and impactful tasks are addressed first, maximizing the overall benefit of the refactoring effort. This step involves considering factors such as technical debt, performance bottlenecks, and maintainability issues.",
    "category": "Planning",
    "purpose": "To rank refactoring tasks based on impact, urgency, and feasibility.",
    "keywords": [
      "prioritization",
      "ranking",
      "importance",
      "urgency"
    ],
    "applicability_notes": "Crucial for managing refactoring efforts effectively, especially when resources are limited. Prioritization helps to focus on the most important tasks and ensures that the overall impact of the refactoring is maximized.",
    "examples_of_usage": [
      "Prioritizing refactoring tasks based on their impact on system performance.",
      "Ranking tasks based on the level of technical debt they address.",
      "Prioritizing tasks based on their impact on maintainability."
    ],
    "typical_inputs": [
      "List of refactoring tasks",
      "Impact assessment",
      "Resource constraints"
    ],
    "typical_outputs": [
      "Prioritized task list",
      "Implementation roadmap"
    ]
  },
  {
    "id": "d4e5f6a7-b8c9-0123-4567-890abcdef123",
    "name": "Implement Changes",
    "description": "Execute the planned refactoring tasks, making incremental and controlled changes to the system, code, or process. This involves applying refactoring techniques, testing the changes thoroughly, and ensuring that the functionality and performance are maintained or improved. Continuous integration and testing are essential during this phase.",
    "category": "Execution",
    "purpose": "To execute refactoring tasks and make incremental improvements.",
    "keywords": [
      "implementation",
      "execution",
      "changes",
      "improvement"
    ],
    "applicability_notes": "The core of the refactoring process, where the actual changes are made. It's crucial to make incremental changes and test them thoroughly to minimize the risk of introducing new issues.",
    "examples_of_usage": [
      "Applying refactoring techniques to improve code readability and maintainability.",
      "Optimizing database queries to improve performance.",
      "Restructuring a business process to improve efficiency."
    ],
    "typical_inputs": [
      "Prioritized task list",
      "Refactoring plan",
      "Development environment"
    ],
    "typical_outputs": [
      "Refactored code",
      "Improved system",
      "Updated documentation"
    ]
  },
  {
    "id": "e5f6a7b8-c9d0-1234-5678-90abcdef1234",
    "name": "Validate Results",
    "description": "Verify that the refactoring efforts have achieved the defined objectives and that the system, code, or process is functioning as expected. This involves measuring the impact of the changes, comparing the results against the success metrics, and ensuring that no new issues have been introduced. Performance testing, regression testing, and user acceptance testing are common validation techniques.",
    "category": "Assessment",
    "purpose": "To verify that refactoring efforts have achieved the defined objectives.",
    "keywords": [
      "validation",
      "verification",
      "testing",
      "measurement"
    ],
    "applicability_notes": "Essential to ensure that the refactoring has been successful and that the system is functioning correctly. Validation provides evidence that the changes have had the desired impact and that no new issues have been introduced.",
    "examples_of_usage": [
      "Measuring the performance improvement of a database query after refactoring.",
      "Comparing the number of bugs in a software application before and after refactoring.",
      "Conducting user acceptance testing to ensure that the refactored system meets user requirements."
    ],
    "typical_inputs": [
      "Refactored system",
      "Success metrics",
      "Test cases"
    ],
    "typical_outputs": [
      "Validation report",
      "Performance data",
      "User feedback"
    ]
  }
]

---

Artifact from step_1_Lyra_result.txt:
[
  {
    "target_agent_name": "Aurora",
    "new_system_prompt": "You are Aurora, a skilled designer specializing in aesthetic improvements for user interfaces. Your primary goal is to enhance the visual appeal and user experience of existing interfaces during refactoring. You will receive descriptions of UI components or entire interfaces targeted for refactoring and must generate detailed design specifications, including mockups and style guides. Focus on modernizing the look and feel, improving usability, and ensuring consistency across the interface. Pay close attention to accessibility guidelines. When creating design specifications, detail the specific changes to be made, including color palettes, typography, spacing, and interactive elements. Explain the rationale behind your design choices, referencing usability principles and current design trends. Ensure your designs align with the overall project goals of improved aesthetics and user satisfaction, and that they are technically feasible for the engineering team to implement. Specifically, consider the 'Assess Current State', 'Define Objectives', and 'Prioritize Tasks' artifacts to guide your design decisions in alignment with the project's refactoring goals."
  },
  {
    "target_agent_name": "Kodax",
    "new_system_prompt": "You are Kodax, a highly proficient software engineer specializing in code refactoring and optimization. Your primary goal is to improve the internal structure, performance, and maintainability of existing codebases without altering external functionality. You will receive code snippets, system descriptions, and refactoring objectives. Your task is to implement the necessary code changes, ensuring adherence to coding best practices, performance optimization techniques, and the SOLID principles. You must provide clear explanations of the refactoring techniques used and the rationale behind your choices. Focus on reducing code complexity, eliminating redundancy, and improving overall code quality. Prioritize tasks based on their impact on system performance and maintainability, as outlined in the 'Prioritize Tasks' artifact. Ensure that all changes are thoroughly tested to prevent regressions and that the codebase remains stable and functional. Your refactoring efforts should align with the overall project goals of improved code quality, performance, and maintainability. Always consider the 'Assess Current State', 'Define Objectives', and 'Validate Results' artifacts to ensure your work aligns with the project's refactoring goals and success metrics."
  }
]

---

Artifact from step_2_Aurora_result.txt:
{
  "design_specifications": {
    "overview": "This document outlines the design specifications for refactoring identified UI components, focusing on modernizing the visual appearance, improving usability, and ensuring accessibility. The design choices are guided by usability principles, current design trends, and the project's refactoring goals as defined in the 'Assess Current State', 'Define Objectives', and 'Prioritize Tasks' artifacts.",
    "color_palette": {
      "primary": {
        "name": "Deep Teal",
        "hex": "#008080",
        "rgb": "0, 128, 128",
        "purpose": "Main brand color, used for primary buttons and accents."
      },
      "secondary": {
        "name": "Light Teal",
        "hex": "#B0E0E6",
        "rgb": "176, 224, 230",
        "purpose": "Secondary color, used for backgrounds and subtle highlights."
      },
      "accent": {
        "name": "Coral",
        "hex": "#FF7F50",
        "rgb": "255, 127, 80",
        "purpose": "Used for interactive elements like links and active states to draw attention."
      },
      "neutral": {
        "name": "Light Gray",
        "hex": "#F5F5F5",
        "rgb": "245, 245, 245",
        "purpose": "Background color for content areas."
      },
      "text_primary": {
        "name": "Dark Gray",
        "hex": "#333333",
        "rgb": "51, 51, 51",
        "purpose": "Primary text color for readability."
      },
      "text_secondary": {
        "name": "Medium Gray",
        "hex": "#666666",
        "rgb": "102, 102, 102",
        "purpose": "Secondary text color for less important information."
      },
       "rationale": "The color palette is designed to be modern, clean, and accessible. The teal tones provide a sense of calmness and professionalism, while the coral accent adds a touch of vibrancy. Contrast ratios have been carefully considered to ensure readability and accessibility, adhering to WCAG guidelines. The neutral background provides a clean canvas for content, improving the overall user experience."
    },
    "typography": {
      "heading": {
        "font_family": "Roboto Slab, serif",
        "font_weight": "700",
        "font_size": "2.5rem",
        "line_height": "1.2",
        "color": "#333333",
        "purpose": "Used for main headings to create a strong visual hierarchy."
      },
      "subheading": {
        "font_family": "Roboto, sans-serif",
        "font_weight": "500",
        "font_size": "1.5rem",
        "line_height": "1.4",
        "color": "#333333",
        "purpose": "Used for subheadings to provide clear section breaks."
      },
      "body": {
        "font_family": "Roboto, sans-serif",
        "font_weight": "400",
        "font_size": "1rem",
        "line_height": "1.6",
        "color": "#666666",
        "purpose": "Used for body text to ensure readability and comfort."
      },
      "caption": {
        "font_family": "Roboto, sans-serif",
        "font_weight": "400",
        "font_size": "0.8rem",
        "line_height": "1.4",
        "color": "#666666",
        "purpose": "Used for captions and small text elements."
      },
      "rationale": "The typography is chosen for its readability and modern aesthetic. Roboto Slab is used for headings to provide a strong visual presence, while Roboto is used for body text to ensure clarity and legibility. Font sizes and line heights are optimized for comfortable reading on various screen sizes. Accessibility is a key consideration, with sufficient contrast between text and background colors."
    },
    "spacing": {
      "unit": "8px",
      "small": "8px",
      "medium": "16px",
      "large": "24px",
      "x_large": "32px",
      "rationale": "A consistent spacing system based on an 8px grid is used throughout the UI to create visual harmony and improve the overall layout. This ensures that elements are consistently spaced, providing a clean and organized appearance. The spacing values are carefully chosen to provide sufficient breathing room between elements without overcrowding the interface."
    },
    "ui_flows": {
      "login_flow": {
        "description": "The login flow is streamlined to be intuitive and efficient, minimizing user friction. The layout is clean and uncluttered, with clear visual cues to guide the user through the process. Error messages are displayed inline, providing immediate feedback to the user.",
        "steps": [
          "User navigates to the login page.",
          "User enters their username and password.",
          "User clicks the 'Login' button.",
          "System validates the credentials.",
          "If the credentials are valid, the user is redirected to the dashboard.",
          "If the credentials are invalid, an error message is displayed inline."
        ],
        "accessibility_considerations": [
          "Ensure that all form fields have proper labels for screen readers.",
          "Provide clear error messages that are easy to understand.",
          "Ensure that the login button is keyboard accessible.",
          "Use ARIA attributes to enhance the accessibility of interactive elements."
        ]
      },
      "data_display_flow": {
        "description": "The data display flow is designed to present information in a clear and organized manner, enabling users to quickly find and understand the data they need. The layout is responsive, adapting to different screen sizes and devices. Data tables are used to present tabular data, with clear headings and sorting options.",
        "steps": [
          "User navigates to the data display page.",
          "System retrieves the data from the server.",
          "Data is displayed in a table or chart.",
          "User can sort and filter the data.",
          "User can drill down into individual data points for more detail."
        ],
        "accessibility_considerations": [
          "Ensure that data tables have proper headers for screen readers.",
          "Provide alternative text for charts and graphs.",
          "Ensure that the data is accessible to users with disabilities.",
          "Use ARIA attributes to enhance the accessibility of interactive elements."
        ]
      },
      "rationale": "The UI flows are designed to be user-centered, focusing on simplicity, efficiency, and accessibility. The steps are clearly defined, and the accessibility considerations are carefully addressed to ensure that the interface is usable by everyone. The flows are optimized to minimize user effort and provide a seamless experience."
    },
    "interactive_elements": {
      "buttons": {
        "primary": {
          "background_color": "#008080",
          "text_color": "#FFFFFF",
          "border_radius": "4px",
          "padding": "10px 20px",
          "font_weight": "500",
          "hover_state": {
            "background_color": "#006666"
          },
          "focus_state": {
            "outline": "2px solid #FF7F50"
          },
          "rationale": "Primary buttons are designed to be visually prominent and easy to identify. The teal background color provides a strong visual contrast, while the white text ensures readability. Hover and focus states provide clear feedback to the user, enhancing the overall user experience. The focus state is designed to meet accessibility guidelines."
        },
        "secondary": {
          "background_color": "#FFFFFF",
          "text_color": "#008080",
          "border": "1px solid #008080",
          "border_radius": "4px",
          "padding": "10px 20px",
          "font_weight": "500",
          "hover_state": {
            "background_color": "#F5F5F5"
          },
           "focus_state": {
            "outline": "2px solid #FF7F50"
          },
          "rationale": "Secondary buttons are designed to be less prominent than primary buttons, providing a clear visual hierarchy. The white background color and teal border provide a subtle contrast, while the teal text ensures readability. Hover and focus states provide clear feedback to the user, enhancing the overall user experience. The focus state is designed to meet accessibility guidelines."
        },
         "rationale": "Interactive elements are designed to be visually clear and easy to use. The button styles are consistent throughout the UI, providing a unified user experience. Hover and focus states provide clear feedback to the user, enhancing interactivity. Accessibility is a key consideration, with focus states designed to meet accessibility guidelines. Clear visual cues are provided for interactive elements to ensure ease of use."
      },
      "input_fields": {
        "border": "1px solid #CCCCCC",
        "border_radius": "4px",
        "padding": "10px",
        "font_size": "1rem",
        "text_color": "#333333",
        "focus_state": {
            "border_color": "#008080",
            "outline": "none"
          },
          "rationale": "Input fields are designed to be clean and simple, providing a clear visual structure for data entry. The border and padding provide a clear visual boundary, while the font size and text color ensure readability. The focus state provides clear feedback to the user, enhancing the overall user experience. Ensure sufficient contrast for accessibility."
      }
    },
    "accessibility": {
      "wcag_compliance": "All design elements and UI flows are designed to comply with WCAG 2.1 Level AA guidelines.",
      "color_contrast": "Color contrast ratios are carefully considered to ensure readability for users with visual impairments.",
      "keyboard_navigation": "All interactive elements are keyboard accessible, allowing users to navigate the interface without a mouse.",
      "screen_reader_support": "The interface is designed to be compatible with screen readers, providing alternative text for images and proper labeling for form fields.",
      "rationale": "Accessibility is a core principle of the design, ensuring that the interface is usable by everyone, regardless of their abilities. WCAG 2.1 Level AA guidelines are followed to ensure compliance with accessibility standards. Color contrast, keyboard navigation, and screen reader support are carefully considered to provide a seamless experience for all users. Regular accessibility audits are conducted to ensure ongoing compliance."
    },
    "mockups": {
      "login_page": "Placeholder for Login Page Mockup Image",
      "dashboard_page": "Placeholder for Dashboard Page Mockup Image",
      "data_display_page": "Placeholder for Data Display Page Mockup Image",
      "rationale": "Mockups are provided to illustrate the visual appearance and layout of the refactored UI components. The mockups are designed to be realistic and representative of the final product. They provide a visual guide for the engineering team, ensuring that the design is implemented accurately. The mockups are regularly updated to reflect changes in the design."
    }
  }
}

---

Artifact from step_3_Kodax_result.txt:
{
  "refactoring_steps": [
    {
      "step_id": 1,
      "description": "Implement the new color palette defined in the design specifications.",
      "rationale": "Adopting the new color palette will immediately modernize the look and feel of the application. It also addresses accessibility concerns regarding color contrast, as outlined in the design specifications.",
      "code_changes": [
        {
          "file": "styles/global.css",
          "action": "replace",
          "old_value": "Existing color definitions",
          "new_value": ":root {\n  --primary-color: #008080; /* Deep Teal */\n  --secondary-color: #B0E0E6; /* Light Teal */\n  --accent-color: #FF7F50; /* Coral */\n  --neutral-color: #F5F5F5; /* Light Gray */\n  --text-primary: #333333; /* Dark Gray */\n  --text-secondary: #666666; /* Medium Gray */\n}"
        },
        {
          "file": "components/button.js",
          "action": "modify",
          "description": "Update button styles to use new color variables.",
          "old_value": "background: blue;\ncolor: white;",
          "new_value": "background: var(--primary-color);\ncolor: var(--text-primary);"
        }
      ],
      "testing": [
        "Verify that all UI elements use the new color palette.",
        "Check color contrast ratios to ensure WCAG compliance.",
        "Test in different browsers and devices."
      ]
    },
    {
      "step_id": 2,
      "description": "Apply the new typography styles.",
      "rationale": "Implementing the specified typography will improve readability and visual hierarchy. Using Roboto and Roboto Slab will modernize the text rendering and provide a more consistent user experience.",
      "code_changes": [
        {
          "file": "styles/global.css",
          "action": "add",
          "description": "Add font imports and base typography styles.",
          "new_value": "@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@700&family=Roboto:wght@400;500&display=swap');\n\nbody {\n  font-family: 'Roboto', sans-serif;\n  font-size: 1rem;\n  line-height: 1.6;\n  color: var(--text-secondary);\n}\n\nh1 {\n  font-family: 'Roboto Slab', serif;\n  font-weight: 700;\n  font-size: 2.5rem;\n  line-height: 1.2;\n  color: var(--text-primary);\n}\n\nh2 {\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 1.4;\n  color: var(--text-primary);\n}"
        },
        {
          "file": "components/heading.js",
          "action": "modify",
          "description": "Update heading components to use new font styles.",
          "old_value": "fontSize: '2em',\nfontWeight: 'bold',",
          "new_value": "fontFamily: 'Roboto Slab', serif;\nfontSize: '2.5rem';\nfontWeight: 700;"
        }
      ],
      "testing": [
        "Verify that all headings and body text use the correct fonts.",
        "Check font sizes and line heights on different screen sizes.",
        "Ensure text is readable and legible."
      ]
    },
    {
      "step_id": 3,
      "description": "Implement the spacing system based on the 8px grid.",
      "rationale": "A consistent spacing system improves visual harmony and layout consistency. Using an 8px grid simplifies spacing decisions and ensures a clean, organized appearance.",
      "code_changes": [
        {
          "file": "styles/global.css",
          "action": "add",
          "description": "Define spacing variables.",
          "new_value": ":root {\n  --spacing-unit: 8px;\n  --spacing-small: calc(var(--spacing-unit) * 1); /* 8px */\n  --spacing-medium: calc(var(--spacing-unit) * 2); /* 16px */\n  --spacing-large: calc(var(--spacing-unit) * 3); /* 24px */\n  --spacing-x-large: calc(var(--spacing-unit) * 4); /* 32px */\n}"
        },
        {
          "file": "components/layout.js",
          "action": "modify",
          "description": "Update component spacing to use spacing variables.",
          "old_value": "padding: 20px;",
          "new_value": "padding: var(--spacing-medium);"
        }
      ],
      "testing": [
        "Verify that all elements are spaced according to the 8px grid.",
        "Check spacing on different screen sizes to ensure responsiveness.",
        "Ensure that there is sufficient breathing room between elements."
      ]
    },
    {
      "step_id": 4,
      "description": "Refactor interactive elements (buttons, input fields) to match the new design.",
      "rationale": "Updating the interactive elements will enhance usability and provide a consistent user experience. Implementing hover and focus states improves interactivity and accessibility.",
      "code_changes": [
        {
          "file": "components/button.js",
          "action": "modify",
          "description": "Update primary button styles.",
          "old_value": "background: blue;\ncolor: white;\nborderRadius: '5px';",
          "new_value": "background: var(--primary-color);\ncolor: white;\nborderRadius: '4px';\npadding: '10px 20px';\nfontWeight: 500;\n\n&:hover {\n  background-color: #006666;\n}\n\n&:focus {\n  outline: 2px solid var(--accent-color);\n}"
        },
        {
          "file": "components/input.js",
          "action": "modify",
          "description": "Update input field styles.",
          "old_value": "border: '1px solid gray';\nborderRadius: '5px';",
          "new_value": "border: '1px solid #CCCCCC';\nborderRadius: '4px';\npadding: '10px';\nfontSize: '1rem';\ncolor: var(--text-primary);\n\n&:focus {\n  border-color: var(--primary-color);\n  outline: none;\n}"
        }
      ],
      "testing": [
        "Verify that buttons and input fields have the correct styles.",
        "Check hover and focus states for interactivity and accessibility.",
        "Test keyboard navigation to ensure accessibility."
      ]
    },
    {
      "step_id": 5,
      "description": "Implement accessibility considerations for UI flows (login, data display).",
      "rationale": "Ensuring accessibility is crucial for providing a seamless experience for all users. Proper labels for form fields, clear error messages, and ARIA attributes enhance accessibility for users with disabilities.",
      "code_changes": [
        {
          "file": "components/loginForm.js",
          "action": "modify",
          "description": "Add labels to form fields and ARIA attributes.",
          "old_value": "<input type=\"text\" name=\"username\" />",
          "new_value": "<label htmlFor=\"username\">Username:</label>\n<input type=\"text\" id=\"username\" name=\"username\" aria-label=\"Username\" />"
        },
        {
          "file": "components/dataDisplayTable.js",
          "action": "modify",
          "description": "Add table headers for screen readers.",
          "old_value": "<td>Data 1</td>",
          "new_value": "<th scope=\"col\">Data 1</th>"
        }
      ],
      "testing": [
        "Test with screen readers to ensure proper content is read.",
        "Check keyboard navigation to ensure all elements are accessible.",
        "Verify that form fields have proper labels."
      ]
    }
  ]
}



Please execute your sub-task, keeping the overall goal and your role's specific goal in mind to ensure your output is relevant to the project.