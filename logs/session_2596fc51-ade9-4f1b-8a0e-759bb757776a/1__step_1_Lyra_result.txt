{
  "workflow_name": "Core Image Recognition Prompt Workflow",
  "description": "Defines the sequential prompts for an AI model to analyze a live image, generate queries for a captioned database, compare candidates, and make a recognition decision.",
  "steps": [
    {
      "step_id": "1_live_image_analysis",
      "name": "Live Image Feature Extraction and Description",
      "purpose": "To generate a rich, structured description and extract key visual features from the live input image for subsequent comparison.",
      "prompt_template": {
        "role": "system",
        "instruction": "You are an advanced image analysis AI. Your task is to meticulously examine the provided live image. Identify and describe all prominent objects, their attributes (e.g., color, texture, material), the scene context, any discernible text, and overall visual themes. Prioritize features that would serve as unique identifiers. Generate a concise, yet comprehensive, textual description and extract keywords suitable for database querying. If the underlying model supports it, also generate a high-dimensional embedding of the image.",
        "input_format": {
          "type": "image_data",
          "description": "The raw live image captured by the user, provided as a base64 encoded string or direct image input."
        },
        "output_format": {
          "type": "json",
          "schema": {
            "title": "ImageAnalysisOutput",
            "type": "object",
            "properties": {
              "textual_description": {
                "type": "string",
                "description": "A detailed natural language description of the image content."
              },
              "extracted_keywords": {
                "type": "array",
                "items": { "type": "string" },
                "description": "A list of key identifying keywords and concepts (e.g., 'red car', 'wooden table', 'mountain landscape')."
              },
              "image_embedding_vector": {
                "type": "array",
                "items": { "type": "number" },
                "description": "A high-dimensional vector representation of the image, if generated by the model."
              }
            },
            "required": ["textual_description", "extracted_keywords"]
          }
        },
        "success_criteria": "A detailed and accurate description, relevant keywords, and an optional embedding are extracted, ready for database query formulation."
      }
    },
    {
      "step_id": "2_database_query_generation",
      "name": "Database Query Generation",
      "purpose": "To translate the live image's analysis into an effective query for retrieving similar captioned images from the database.",
      "prompt_template": {
        "role": "system",
        "instruction": "Based on the provided analysis of the live image, generate an optimized query string and/or structured query parameters for a database containing captioned images. The goal is to retrieve the most visually and semantically similar images. Focus on keywords from 'extracted_keywords' and semantic concepts from 'textual_description' that are most likely to match database captions. If an 'image_embedding_vector' is available, incorporate it for vector similarity search.",
        "input_format": {
          "type": "json",
          "description": "Output from '1_live_image_analysis' step.",
          "schema": { "$ref": "#/steps/0/prompt_template/output_format/schema" }
        },
        "output_format": {
          "type": "json",
          "schema": {
            "title": "DatabaseQueryOutput",
            "type": "object",
            "properties": {
              "keyword_query": {
                "type": "string",
                "description": "A natural language query string suitable for keyword-based search."
              },
              "semantic_query_vector": {
                "type": "array",
                "items": { "type": "number" },
                "description": "A vector embedding representing the semantic content of the query, if applicable."
              },
              "structured_parameters": {
                "type": "object",
                "description": "Structured parameters for an advanced database query (e.g., {'search_terms': ['car', 'red'], 'embedding': [...]})."
              }
            },
            "required": ["keyword_query"]
          }
        },
        "success_criteria": "A relevant and effective query (or set of parameters) is generated that can retrieve potential matches from the database."
      }
    },
    {
      "step_id": "3_similarity_assessment",
      "name": "Candidate Image Comparison and Similarity Scoring",
      "purpose": "To compare the live image's characteristics against a list of retrieved candidate images from the database and assign a comprehensive similarity score to each candidate.",
      "prompt_template": {
        "role": "system",
        "instruction": "You are a similarity assessment AI. Given the live image's analysis and a list of candidate images retrieved from the database (each with its caption, and potentially its own features/embedding), calculate a comprehensive similarity score for each candidate against the live image. The score should reflect both visual and semantic congruence. Provide a brief justification for the score of each candidate. The scoring range should be 0.0 (no similarity) to 1.0 (perfect match). Rank the candidates from highest to lowest similarity.",
        "input_format": {
          "type": "json",
          "description": "Consolidated data including live image analysis and retrieved database candidates.",
          "schema": {
            "type": "object",
            "properties": {
              "live_image_analysis": { "$ref": "#/steps/0/prompt_template/output_format/schema" },
              "candidate_images": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "image_id": { "type": "string" },
                    "caption": { "type": "string" },
                    "keywords": { "type": "array", "items": { "type": "string" } },
                    "embedding": { "type": "array", "items": { "type": "number" } }
                  },
                  "required": ["image_id", "caption"]
                }
              }
            },
            "required": ["live_image_analysis", "candidate_images"]
          }
        },
        "output_format": {
          "type": "json",
          "schema": {
            "title": "SimilarityScoresOutput",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "image_id": { "type": "string" },
                "caption": { "type": "string" },
                "similarity_score": { "type": "number", "minimum": 0.0, "maximum": 1.0 },
                "justification": { "type": "string" }
              },
              "required": ["image_id", "caption", "similarity_score", "justification"]
            }
          }
        },
        "success_criteria": "All candidate images are scored accurately, justifications are provided, and the list is ordered by similarity (descending)."
      }
    },
    {
      "step_id": "4_recognition_decision",
      "name": "Final Recognition Decision and Confidence",
      "purpose": "To make a definitive recognition decision based on similarity scores and provide a confidence level, or suggest closest matches if no confident recognition is made.",
      "prompt_template": {
        "role": "system",
        "instruction": "Based on the ranked list of candidate images and their similarity scores, determine if a confident recognition can be made. A recognition is considered confident if the top candidate's 'similarity_score' is above a predefined 'recognition_threshold' (e.g., 0.8) AND is significantly higher than the second-best score (e.g., by a 'delta_threshold' of 0.1). If a confident match is found, identify the recognized image. Otherwise, indicate that no confident match was found and list the top 3 closest matches with their scores for user review. Provide a concise explanation for the decision.",
        "input_format": {
          "type": "json",
          "description": "Ranked list of candidate images with similarity scores, along with configurable thresholds.",
          "schema": {
            "type": "object",
            "properties": {
              "ranked_candidates": { "$ref": "#/steps/2/prompt_template/output_format/schema" },
              "recognition_threshold": { "type": "number", "default": 0.8, "description": "Minimum score for a confident recognition." },
              "delta_threshold": { "type": "number", "default": 0.1, "description": "Minimum difference between top and second score for confident recognition." }
            },
            "required": ["ranked_candidates"]
          }
        },
        "output_format": {
          "type": "json",
          "schema": {
            "title": "RecognitionDecisionOutput",
            "type": "object",
            "properties": {
              "recognition_status": {
                "type": "string",
                "enum": ["recognized", "no_confident_match"],
                "description": "Indicates if a confident match was found."
              },
              "recognized_image": {
                "type": "object",
                "properties": {
                  "image_id": { "type": "string" },
                  "caption": { "type": "string" },
                  "confidence_score": { "type": "number", "minimum": 0.0, "maximum": 1.0 }
                },
                "description": "Details of the recognized image, present only if 'recognition_status' is 'recognized'."
              },
              "closest_matches": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "image_id": { "type": "string" },
                    "caption": { "type": "string" },
                    "similarity_score": { "type": "number" }
                  }
                },
                "description": "Top 3 closest matches, present if 'recognition_status' is 'no_confident_match' or as additional info."
              },
              "explanation": {
                "type": "string",
                "description": "Brief justification for the recognition decision or lack thereof."
              }
            },
            "required": ["recognition_status", "explanation"]
          }
        },
        "success_criteria": "A clear, justified recognition decision is made, or the closest matches are presented if no confident recognition is possible."
      }
    }
  ]
}