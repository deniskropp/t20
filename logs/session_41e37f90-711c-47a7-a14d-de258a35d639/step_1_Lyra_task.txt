The overall goal is: 'refactoring'

Your role's specific goal is: 'Refine prompts, structure workflows and ensure clarity in agent instructions.'
Your specific sub-task is: 'Refine the prompts for the Designer and Engineer roles to ensure clarity and focus on the refactoring goals, including accessibility and performance considerations.'

Please use the following outputs from the other agents as your input:

Artifact from step_0_TASe_result.txt:
[
  {
    "id": "a12a9b80-256d-4749-9e50-38f5824a214b",
    "name": "Analyze Existing Structure",
    "description": "This step involves a thorough examination of the current system or component to understand its design, dependencies, and potential areas for improvement. It includes identifying code smells, performance bottlenecks, and maintainability issues. The analysis provides a baseline understanding before any modifications are made.",
    "category": "Analysis",
    "purpose": "To gain a deep understanding of the current system's architecture and identify areas needing refactoring.",
    "keywords": [
      "code analysis",
      "dependency analysis",
      "performance analysis",
      "code smells",
      "reverse engineering"
    ],
    "applicability_notes": "Applicable to any system or component that requires restructuring or improvement. The specific analysis techniques may vary based on the nature of the system.",
    "examples_of_usage": [
      "Analyzing a legacy software system to identify areas with high complexity and low maintainability.",
      "Examining a database schema to identify normalization issues and potential performance bottlenecks.",
      "Evaluating a manufacturing process to identify inefficiencies and areas for automation."
    ],
    "typical_inputs": [
      "Existing system or component",
      "Codebase",
      "Documentation (if available)",
      "Performance metrics (if available)"
    ],
    "typical_outputs": [
      "Analysis report",
      "List of code smells",
      "Dependency graph",
      "Performance bottlenecks identified"
    ]
  },
  {
    "id": "5b8c76e7-3e7c-4f6b-a8a2-9c1e7b3a5e8d",
    "name": "Define Refactoring Goals",
    "description": "This step involves establishing clear objectives for the refactoring process. These goals might include improving code readability, reducing complexity, enhancing performance, or increasing maintainability. Defining goals ensures that the refactoring efforts are focused and aligned with the overall project objectives.",
    "category": "Planning",
    "purpose": "To establish clear, measurable objectives for the refactoring process.",
    "keywords": [
      "goal setting",
      "objective definition",
      "requirements analysis",
      "project planning"
    ],
    "applicability_notes": "This step is critical for any refactoring project, regardless of the size or complexity of the system. Clear goals help to prioritize refactoring efforts and measure success.",
    "examples_of_usage": [
      "Defining a goal to reduce the cyclomatic complexity of a module by 20%.",
      "Setting a goal to improve the code coverage of a critical component to 90%.",
      "Establishing a goal to reduce the number of dependencies in a system to improve maintainability."
    ],
    "typical_inputs": [
      "Analysis report (from 'Analyze Existing Structure')",
      "Project requirements",
      "Stakeholder feedback"
    ],
    "typical_outputs": [
      "Refactoring goals document",
      "Prioritized list of refactoring tasks",
      "Success criteria for refactoring"
    ]
  },
  {
    "id": "8e0a2f19-0e7a-4e3c-b5a1-2d9b6a7f8c1e",
    "name": "Implement Refactoring Changes",
    "description": "This step involves making the actual modifications to the system or component based on the defined refactoring goals. It includes applying various refactoring techniques, such as extracting methods, renaming variables, and simplifying complex logic. This step should be performed iteratively, with frequent testing to ensure that the changes do not introduce new issues.",
    "category": "Execution",
    "purpose": "To make the necessary changes to the system to achieve the refactoring goals.",
    "keywords": [
      "code modification",
      "refactoring techniques",
      "code improvement",
      "iterative development"
    ],
    "applicability_notes": "This step is the core of the refactoring process. The specific techniques used will vary based on the nature of the system and the refactoring goals.",
    "examples_of_usage": [
      "Extracting a complex calculation into a separate method to improve readability.",
      "Renaming a variable to better reflect its purpose.",
      "Simplifying a conditional statement to reduce complexity."
    ],
    "typical_inputs": [
      "Refactoring goals document",
      "Codebase",
      "Development environment"
    ],
    "typical_outputs": [
      "Modified codebase",
      "Unit tests",
      "Integration tests"
    ]
  },
  {
    "id": "3c9b6d1a-7e2f-4b5a-8c3e-5d2a1b4f6e8d",
    "name": "Validate Refactored Structure",
    "description": "This step involves verifying that the refactoring changes have achieved the defined goals and have not introduced any new issues. It includes running unit tests, integration tests, and performance tests to ensure that the system is functioning correctly. It also involves code reviews to ensure that the changes meet the required quality standards.",
    "category": "Quality Assurance",
    "purpose": "To ensure that the refactored system meets the defined goals and maintains its functionality and quality.",
    "keywords": [
      "testing",
      "quality assurance",
      "code review",
      "validation",
      "verification"
    ],
    "applicability_notes": "This step is crucial to ensure the success of the refactoring process. Thorough testing and code reviews are essential to identify and fix any issues before the changes are deployed.",
    "examples_of_usage": [
      "Running unit tests to verify that individual components are functioning correctly.",
      "Performing integration tests to ensure that different parts of the system are working together seamlessly.",
      "Conducting code reviews to identify potential issues and ensure that the changes meet the required quality standards."
    ],
    "typical_inputs": [
      "Modified codebase",
      "Unit tests",
      "Integration tests",
      "Code review checklist"
    ],
    "typical_outputs": [
      "Test results",
      "Code review report",
      "Validated codebase"
    ]
  }
]



Please execute your sub-task, keeping the overall goal and your role's specific goal in mind to ensure your output is relevant to the project.