The overall goal is: 'Create a simple TDOO app'

Your role's specific goal is: 'Structure workflows and ensure clarity in agent instructions, system prompt engineering'
Your specific sub-task is: 'Develop a system prompt for the Engineer agent based on the workflow and design outputs, specifying the implementation requirements.'

The team's roles are:
    {'reasoning': 'The high-level goal is to create a simple TODO app. The plan should start by identifying the fundamental steps required, which will be handled by the TAS extractors. Then, the Prompt Engineer will structure these steps into a workflow. The Designer will create the visual aspects, and the Engineer will implement the code. This iterative process ensures all aspects of development are covered.', 'roles': [{'title': 'Task-Agnostic Step (TAS) extractor', 'description': "Identifies and extracts 'Task Agnostic Steps' (TAS) towards the high-level goal."}, {'title': 'Prompt Engineer', 'description': 'Structures workflows and ensures clarity in agent instructions, system prompt engineering.'}, {'title': 'Designer', 'description': 'Generates aesthetic layouts, color palettes, typography, and UI flows, ensuring accessibility and visual balance.'}, {'title': 'Engineer', 'description': 'Implements designs into clean, modular, and performant code, focusing on responsive design and accessibility.'}], 'tasks': [{'task_id': 'T1', 'task': 'Identify the core functionalities of a simple TODO app (e.g., add task, view tasks, mark as complete, delete task).', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'GPTASe', 'requires': []}, {'task_id': 'T2', 'task': 'Break down the identified functionalities into smaller, actionable steps.', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'TASe', 'requires': ['T1']}, {'task_id': 'T3', 'task': 'Consolidate and refine the list of actionable steps, ensuring they are task-agnostic.', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'uTASe', 'requires': ['T2']}, {'task_id': 'T4', 'task': 'Structure the extracted TAS into a logical development workflow, defining the order of operations and dependencies.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T3']}, {'task_id': 'T5', 'task': 'Develop a system prompt for the Designer agent based on the workflow, specifying the need for UI elements for each core functionality.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T4']}, {'task_id': 'T6', 'task': 'Generate aesthetic layouts, color palettes, typography, and UI flows for the TODO app, ensuring accessibility and visual balance.', 'role': 'Designer', 'name': 'Aurora', 'requires': ['T5']}, {'task_id': 'T7', 'task': 'Develop a system prompt for the Engineer agent based on the workflow and design outputs, specifying the implementation requirements.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T4', 'T6']}, {'task_id': 'T8', 'task': "Implement the TODO app's design into clean, modular, and performant code, focusing on responsive design and accessibility.", 'role': 'Engineer', 'name': 'Kodax', 'requires': ['T7']}]}

Please use the following outputs from the other agents as your input:

Artifact from 1__step_3_Lyra_result.txt (Prompt Engineer)[T4]:
{
  "reasoning": "The user wants me to act as 'Lyra', the Prompt Engineer, and execute sub-task T4: 'Structure the extracted TAS into a logical development workflow, defining the order of operations and dependencies.' I have received the consolidated Task-Agnostic Steps (TAS) from the previous step (T3). My goal is to organize these TAS into a coherent workflow that represents the development process for a simple TODO app. This involves identifying dependencies and establishing a logical sequence for the tasks. I will then present this workflow in a structured JSON format.",
  "output": "The following workflow structures the development of a simple TODO application based on the provided Task-Agnostic Steps (TAS):\n\n**Phase 1: Foundational Setup & Core Functionality Definition**\n1.  **T1: Identify Core Functionalities:** Define the essential features of a simple TODO app (add, view, complete, delete).\n    *   *Dependencies:* None.\n    *   *Role:* Task-Agnostic Step (TAS) extractor.\n2.  **T2: Break Down Functionalities:** Decompose the core functionalities into smaller, actionable steps.\n    *   *Dependencies:* T1.\n    *   *Role:* Task-Agnostic Step (TAS) extractor.\n3.  **T3: Consolidate and Refine TAS:** Ensure all steps are task-agnostic and well-defined.\n    *   *Dependencies:* T2.\n    *   *Role:* Task-Agnostic Step (TAS) extractor.\n\n**Phase 2: Workflow Structuring & Prompt Engineering**\n4.  **T4: Structure Development Workflow:** Organize the refined TAS into a logical sequence with defined dependencies. (This current task).\n    *   *Dependencies:* T3.\n    *   *Role:* Prompt Engineer.\n    *   *Output:* This structured workflow.\n5.  **T5: Develop Designer System Prompt:** Create a prompt for the Designer agent, outlining UI requirements based on the workflow and core functionalities.\n    *   *Dependencies:* T4.\n    *   *Role:* Prompt Engineer.\n\n**Phase 3: Design & Implementation**\n6.  **T6: Generate UI/UX Design:** Create layouts, color schemes, typography, and UI flows for the TODO app.\n    *   *Dependencies:* T5.\n    *   *Role:* Designer.\n7.  **T7: Develop Engineer System Prompt:** Create a prompt for the Engineer agent, detailing implementation requirements based on the workflow and design outputs.\n    *   *Dependencies:* T4, T6.\n    *   *Role:* Prompt Engineer.\n8.  **T8: Implement Code:** Develop the functional TODO application based on the design and engineer prompts.\n    *   *Dependencies:* T7.\n    *   *Role:* Engineer.\n\n**Mapping TAS to Workflow Steps:**\n*   **Define Data Input Mechanism (TAS ID: a1b2c3d4-e5f6-7890-1234-567890abcdef):** Corresponds to the 'add task' functionality. This will be addressed in T2, T3, T5, T6, and T8.\n*   **Establish Data Display (TAS ID: b2c3d4e5-f6a7-8901-2345-67890abcdef0):** Corresponds to the 'view tasks' functionality. This will be addressed in T2, T3, T5, T6, and T8.\n*   **Define State Modification (TAS ID: c3d4e5f6-a7b8-9012-3456-7890abcdef01):** Corresponds to the 'mark as complete' functionality. This will be addressed in T2, T3, T5, T6, and T8.\n*   **Establish Data Removal (TAS ID: d4e5f6a7-b8c9-0123-4567-890abcdef012):** Corresponds to the 'delete task' functionality. This will be addressed in T2, T3, T5, T6, and T8.",
  "files": [
    {
      "name": "development_workflow.json",
      "content": "{\n  \"workflow_name\": \"Simple TODO App Development Workflow\",\n  \"description\": \"A structured workflow for developing a simple TODO application, outlining phases, tasks, dependencies, and role assignments.\",\n  \"phases\": [\n    {\n      \"phase_number\": 1,\n      \"name\": \"Foundational Setup & Core Functionality Definition\",\n      \"tasks\": [\n        {\n          \"task_id\": \"T1\",\n          \"task\": \"Identify the core functionalities of a simple TODO app (e.g., add task, view tasks, mark as complete, delete task).\",\n          \"role\": \"Task-Agnostic Step (TAS) extractor\",\n          \"name\": \"GPTASe\",\n          \"requires\": []\n        },\n        {\n          \"task_id\": \"T2\",\n          \"task\": \"Break down the identified functionalities into smaller, actionable steps.\",\n          \"role\": \"Task-Agnostic Step (TAS) extractor\",\n          \"name\": \"TASe\",\n          \"requires\": [\"T1\"]\n        },\n        {\n          \"task_id\": \"T3\",\n          \"task\": \"Consolidate and refine the list of actionable steps, ensuring they are task-agnostic.\",\n          \"role\": \"Task-Agnostic Step (TAS) extractor\",\n          \"name\": \"uTASe\",\n          \"requires\": [\"T2\"]\n        }\n      ]\n    },\n    {\n      \"phase_number\": 2,\n      \"name\": \"Workflow Structuring & Prompt Engineering\",\n      \"tasks\": [\n        {\n          \"task_id\": \"T4\",\n          \"task\": \"Structure the extracted TAS into a logical development workflow, defining the order of operations and dependencies.\",\n          \"role\": \"Prompt Engineer\",\n          \"name\": \"Lyra\",\n          \"requires\": [\"T3\"]\n        },\n        {\n          \"task_id\": \"T5\",\n          \"task\": \"Develop a system prompt for the Designer agent based on the workflow, specifying the need for UI elements for each core functionality.\",\n          \"role\": \"Prompt Engineer\",\n          \"name\": \"Lyra\",\n          \"requires\": [\"T4\"]\n        }\n      ]\n    },\n    {\n      \"phase_number\": 3,\n      \"name\": \"Design & Implementation\",\n      \"tasks\": [\n        {\n          \"task_id\": \"T6\",\n          \"task\": \"Generate aesthetic layouts, color palettes, typography, and UI flows for the TODO app, ensuring accessibility and visual balance.\",\n          \"role\": \"Designer\",\n          \"name\": \"Aurora\",\n          \"requires\": [\"T5\"]\n        },\n        {\n          \"task_id\": \"T7\",\n          \"task\": \"Develop a system prompt for the Engineer agent based on the workflow and design outputs, specifying the implementation requirements.\",\n          \"role\": \"Prompt Engineer\",\n          \"name\": \"Lyra\",\n          \"requires\": [\"T4\", \"T6\"]\n        },\n        {\n          \"task_id\": \"T8\",\n          \"task\": \"Implement the TODO app's design into clean, modular, and performant code, focusing on responsive design and accessibility.\",\n          \"role\": \"Engineer\",\n          \"name\": \"Kodax\",\n          \"requires\": [\"T7\"]\n        }\n      ]\n    }\n  ],\n  \"task_agnostic_steps_mapping\": {\n    \"a1b2c3d4-e5f6-7890-1234-567890abcdef\": {\n      \"name\": \"Define Data Input Mechanism\",\n      \"related_tasks\": [\"T2\", \"T3\", \"T5\", \"T6\", \"T8\"],\n      \"functionality\": \"Add Task\"\n    },\n    \"b2c3d4e5-f6a7-8901-2345-67890abcdef0\": {\n      \"name\": \"Establish Data Display\",\n      \"related_tasks\": [\"T2\", \"T3\", \"T5\", \"T6\", \"T8\"],\n      \"functionality\": \"View Tasks\"\n    },\n    \"c3d4e5f6-a7b8-9012-3456-7890abcdef01\": {\n      \"name\": \"Define State Modification\",\n      \"related_tasks\": [\"T2\", \"T3\", \"T5\", \"T6\", \"T8\"],\n      \"functionality\": \"Mark as Complete\"\n    },\n    \"d4e5f6a7-b8c9-0123-4567-890abcdef012\": {\n      \"name\": \"Establish Data Removal\",\n      \"related_tasks\": [\"T2\", \"T3\", \"T5\", \"T6\", \"T8\"],\n      \"functionality\": \"Delete Task\"\n    }\n  }\n}"
    }
  ]
}

---

Artifact from 1__step_5_Aurora_result.txt (Designer)[T6]:
{
  "reasoning": "The user wants me, Aurora (Designer), to generate aesthetic layouts, color palettes, typography, and UI flows for a simple TODO app. I have received a system prompt (from Lyra) detailing the key UI elements and design considerations. My plan is to: 1. Define a clean, minimalist aesthetic. 2. Create a soothing and accessible color palette. 3. Select a highly legible and modern font pairing. 4. Design the core UI components for adding, viewing, completing, and deleting tasks. 5. Outline the primary user flows. 6. Package these elements into a brand kit and layout descriptions.",
  "output": "Aurora's Design Deliverables for the Simple TODO App\n\n**Design Philosophy:**\nOur design for the TODO app embraces 'minimalist tranquility.' The interface is crafted to be a serene space for task management, reducing cognitive load and promoting focus. We prioritize clarity, intuitive interaction, and a visually balanced aesthetic that feels both modern and calming. Accessibility is woven into the fabric of the design, ensuring a seamless experience for all users.\n\n**1. Color Palette: 'Serene Spectrum'**\nThis palette is designed for calm focus and high contrast, ensuring readability and accessibility.\n\n*   **Primary (Background/Base):** `#F8F9FA` (Off-White/Light Gray) - Provides a clean, airy canvas.\n*   **Secondary (Accent/Interactive Elements):** `#4A90E2` (Calm Blue) - Used for buttons, active states, and key interactive elements. Offers good contrast.\n*   **Tertiary (Subtle Highlights/Dividers):** `#E0E0E0` (Light Gray) - For subtle separators and less prominent UI elements.\n*   **Text (Primary):** `#333333` (Dark Gray) - High contrast for main text content.\n*   **Text (Secondary/Muted):** `#757575` (Medium Gray) - For secondary information or disabled states.\n*   **Success/Completion:** `#76C7C0` (Teal Green) - Subtle but clear indicator for completed tasks.\n*   **Delete/Warning:** `#E57373` (Soft Red) - Used sparingly for delete actions, with clear affordance.\n\n**2. Typography: 'Clarity & Flow'**\nA combination of a clean sans-serif for headings and a highly readable sans-serif for body text ensures excellent legibility across all elements.\n\n*   **Headings/Titles:** **Poppins** (SemiBold, 600)\n    *   *Usage:* App Title, Section Headers, Button Labels.\n    *   *Rationale:* Geometric sans-serif with a friendly yet modern feel. Excellent for display.\n*   **Body Text/Task Items:** **Inter** (Regular, 400 / Medium, 500)\n    *   *Usage:* Task descriptions, input fields, helper text.\n    *   *Rationale:* Designed for UI, highly legible at various sizes, provides excellent readability for lists and detailed text.\n\n**3. Logo & Brand Mark:**\n*   **Concept:** A simple, abstract mark representing a checked list item evolving into a gentle wave or checkmark, signifying completion and flow.\n*   **Visual:** A stylized checkmark formed by two smooth, curved lines, creating a sense of gentle motion. The primary color (`#4A90E2`) would be used.\n*   **Wordmark:** 'TODO' in Poppins (SemiBold), potentially with the brand mark subtly integrated or placed to its left.\n\n**4. UI Layouts & Components:**\n\n*   **Main Screen Layout:**\n    *   **Header:** App title ('TODO') centered or left-aligned using Poppins (SemiBold).\n    *   **Task Input Area:** A prominent input field at the top, using Inter (Regular), with a clear placeholder ('Add a new task...'). A distinct 'Add' button (using Calm Blue `#4A90E2` background, white text) sits adjacent or below.\n    *   **Task List:** Vertically scrolling list. Each task item is a distinct card or row with ample padding.\n    *   **Footer (Optional):** Could contain filter/sort options or a summary count.\n\n*   **Task Item Component:**\n    *   **Layout:** Horizontal arrangement within a row.\n    *   **Checkbox/Completion:** A circular checkbox or a toggle switch on the left (using Calm Blue `#4A90E2` when active). Sufficient tap target size.\n    *   **Task Description:** Main text area using Inter (Regular). For completed tasks, apply a strikethrough and use Muted Gray `#757575` text color.\n    *   **Delete Action:** A subtle trash can icon (using Soft Red `#E57373` on hover/focus) aligned to the right. A confirmation modal/snackbar appears upon tap to prevent accidental deletion.\n\n*   **Visual Balance & Spacing:** Generous use of white space (`#F8F9FA` background) around elements. Consistent padding within task items (e.g., 16px) and margins between items (e.g., 8-12px). Focus on alignment and a clean grid structure.\n\n**5. UI Flows:**\n\n*   **Adding a Task:**\n    1.  User taps into the input field.\n    2.  User types task description.\n    3.  User taps 'Add' button.\n    4.  Task animates into the top of the task list.\n    5.  Input field clears, ready for the next task.\n\n*   **Completing a Task:**\n    1.  User taps the checkbox next to a task.\n    2.  Checkbox fills with Calm Blue (`#4A90E2`).\n    3.  Task text gets a strikethrough and text color changes to Muted Gray (`#757575`).\n    4.  (Optional) Task may animate subtly to a 'completed' section or remain in place with visual distinction.\n\n*   **Deleting a Task:**\n    1.  User taps the delete icon next to a task.\n    2.  A confirmation modal appears ('Are you sure you want to delete this task?').\n    3.  User taps 'Confirm' or 'Cancel'.\n    4.  If confirmed, the task animates out of the list.\n\n**Accessibility Notes:**\n*   Color contrast ratios meet WCAG AA standards (e.g., Dark Gray text on Off-White background).\n*   Focus states are clearly defined for interactive elements (e.g., outline on buttons, focus on input fields).\n*   Tap targets are sufficiently large (min 44x44px where possible).\n*   Typography is scalable and legible.\n",
  "files": [
    {
      "name": "aurora_design_kit.json",
      "content": "{\n  \"design_philosophy\": \"Minimalist tranquility, promoting focus and clarity through intuitive interaction and visual balance.\",\n  \"color_palette\": {\n    \"name\": \"Serene Spectrum\",\n    \"primary\": \"#F8F9FA\",\n    \"secondary\": \"#4A90E2\",\n    \"tertiary\": \"#E0E0E0\",\n    \"text_primary\": \"#333333\",\n    \"text_secondary\": \"#757575\",\n    \"success\": \"#76C7C0\",\n    \"warning\": \"#E57373\"\n  },\n  \"typography\": {\n    \"headings\": {\n      \"font_family\": \"Poppins\",\n      \"weight\": \"SemiBold (600)\"\n    },\n    \"body\": {\n      \"font_family\": \"Inter\",\n      \"weight\": \"Regular (400) / Medium (500)\"\n    }\n  },\n  \"logo\": {\n    \"concept\": \"Stylized checkmark representing completion and flow.\",\n    \"visual_description\": \"Two smooth, curved lines forming a gentle checkmark, using primary color #4A90E2.\",\n    \"wordmark\": \"TODO in Poppins (SemiBold)\"\n  },\n  \"ui_elements\": {\n    \"main_screen_layout\": {\n      \"header\": \"App title ('TODO')\",\n      \"task_input_area\": \"Prominent input field with placeholder, adjacent 'Add' button.\",\n      \"task_list\": \"Vertically scrolling list of task items.\"\n    },\n    \"task_item_component\": {\n      \"layout\": \"Horizontal row.\",\n      \"completion_control\": \"Circular checkbox or toggle switch (Color: #4A90E2 when active).\",\n      \"task_description\": \"Text using Inter. Strikethrough and #757575 for completed tasks.\",\n      \"delete_action\": \"Subtle trash icon (Color: #E57373 on hover/focus). Confirmation modal required.\"\n    }\n  },\n  \"design_principles\": {\n    \"visual_balance\": \"Generous white space, consistent padding and margins.\",\n    \"accessibility\": \"WCAG AA contrast, clear focus states, large tap targets, scalable typography.\"\n  },\n  \"user_flows\": {\n    \"add_task\": \"Input -> Type -> Add -> Animate In -> Clear Input.\",\n    \"complete_task\": \"Tap Checkbox -> Visual Change (Strikethrough, Color) -> Task Distinguished.\",\n    \"delete_task\": \"Tap Delete Icon -> Confirmation Modal -> Confirm/Cancel -> Animate Out (if confirmed).\"\n  }\n}"
    },
    {
      "name": "aurora_layout_description.md",
      "content": "# TODO App: Aesthetic Layout Descriptions\n\n## Overall Aesthetic: Minimalist Tranquility\n\nThe design embraces a clean, uncluttered aesthetic that promotes focus and calm. We utilize ample white space, soft color transitions, and clear visual hierarchy to create an intuitive and serene user experience.\n\n## 1. Main Screen Layout\n\n*   **Header:** A simple, clean header displaying the app title \"TODO\" prominently. The typography uses Poppins SemiBold, providing a friendly yet authoritative presence. It's either centered or left-aligned for balance.\n*   **Task Input Area:** Positioned directly below the header for immediate access. It features a wide input field with a subtle border and a clear placeholder text like \"Add a new task...\". The text within the input field uses Inter Regular. Adjacent to this is a clearly defined \"Add\" button, styled with the primary accent color (`#4A90E2`) for visual prominence, ensuring it's easily discoverable.\n*   **Task List:** This is the core of the screen. Tasks are presented in a clean, vertical list. Each task occupies its own row with generous padding, ensuring no visual clutter. Subtle dividers (`#E0E0E0`) might be used between tasks for further separation, or tasks might rely solely on spacing.\n\n## 2. Task Item Component\n\n*   **Structure:** Each task is a distinct horizontal element within the list.\n*   **Completion Control:** On the far left, a circular checkbox awaits interaction. It's designed with a generous tap target. When unchecked, it's outlined in a neutral color. When checked (task completed), it fills with the accent blue (`#4A90E2`), and the task description visually updates.\n*   **Task Description:** Occupies the main central area of the task item. Uses the highly legible Inter font. For completed tasks, a distinct strikethrough is applied, and the text color shifts to a muted gray (`#757575`), providing immediate visual feedback.\n*   **Delete Action:** Positioned on the far right, a minimalist trash can icon serves as the delete affordance. This icon uses the warning red (`#E57373`) to signal its function. Interaction with this icon triggers a confirmation step to prevent accidental deletion, ensuring user control.\n\n## 3. User Flow Visualization (Conceptual)\n\n*   **Adding:** Imagine typing into the input field, the text appearing smoothly. Tapping 'Add' causes the new task to elegantly slide into the top position of the list, followed by the input field clearing itself, ready for the next entry.\n*   **Completing:** A satisfying tap on the checkbox. The checkmark fills, the text gains its strikethrough, and the item slightly dims or shifts its visual weight, clearly marking it as done.\n*   **Deleting:** Tapping the trash icon prompts a gentle modal overlay, asking for confirmation. The choice to confirm or cancel is clear, and upon confirmation, the task smoothly animates out of view.\n\n## Accessibility Considerations Integrated:\n\n*   **Contrast:** All text and interactive elements have been checked against WCAG AA standards against the chosen backgrounds.\n*   **Spacing:** Ample spacing prevents visual crowding and aids users with motor impairments.\n*   **Focus Indicators:** Clear visual cues will be present for keyboard navigation and screen reader users on all interactive elements."
    }
  ]
}



Please execute your sub-task, keeping the overall goal and your role's specific goal in mind to ensure your output is relevant to the project.