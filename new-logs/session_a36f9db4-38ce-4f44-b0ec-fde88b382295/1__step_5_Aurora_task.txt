The overall goal is: 'Create a simple TDOO app'

Your role's specific goal is: 'Generate aesthetic layouts, color palettes, typography, and UI flows, ensuring accessibility and visual balance.'
Your specific sub-task is: 'Generate aesthetic layouts, color palettes, typography, and UI flows for the TODO app, ensuring accessibility and visual balance.'

The team's roles are:
    {'reasoning': 'The high-level goal is to create a simple TODO app. The plan should start by identifying the fundamental steps required, which will be handled by the TAS extractors. Then, the Prompt Engineer will structure these steps into a workflow. The Designer will create the visual aspects, and the Engineer will implement the code. This iterative process ensures all aspects of development are covered.', 'roles': [{'title': 'Task-Agnostic Step (TAS) extractor', 'description': "Identifies and extracts 'Task Agnostic Steps' (TAS) towards the high-level goal."}, {'title': 'Prompt Engineer', 'description': 'Structures workflows and ensures clarity in agent instructions, system prompt engineering.'}, {'title': 'Designer', 'description': 'Generates aesthetic layouts, color palettes, typography, and UI flows, ensuring accessibility and visual balance.'}, {'title': 'Engineer', 'description': 'Implements designs into clean, modular, and performant code, focusing on responsive design and accessibility.'}], 'tasks': [{'task_id': 'T1', 'task': 'Identify the core functionalities of a simple TODO app (e.g., add task, view tasks, mark as complete, delete task).', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'GPTASe', 'requires': []}, {'task_id': 'T2', 'task': 'Break down the identified functionalities into smaller, actionable steps.', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'TASe', 'requires': ['T1']}, {'task_id': 'T3', 'task': 'Consolidate and refine the list of actionable steps, ensuring they are task-agnostic.', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'uTASe', 'requires': ['T2']}, {'task_id': 'T4', 'task': 'Structure the extracted TAS into a logical development workflow, defining the order of operations and dependencies.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T3']}, {'task_id': 'T5', 'task': 'Develop a system prompt for the Designer agent based on the workflow, specifying the need for UI elements for each core functionality.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T4']}, {'task_id': 'T6', 'task': 'Generate aesthetic layouts, color palettes, typography, and UI flows for the TODO app, ensuring accessibility and visual balance.', 'role': 'Designer', 'name': 'Aurora', 'requires': ['T5']}, {'task_id': 'T7', 'task': 'Develop a system prompt for the Engineer agent based on the workflow and design outputs, specifying the implementation requirements.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T4', 'T6']}, {'task_id': 'T8', 'task': "Implement the TODO app's design into clean, modular, and performant code, focusing on responsive design and accessibility.", 'role': 'Engineer', 'name': 'Kodax', 'requires': ['T7']}]}

Please use the following outputs from the other agents as your input:

Artifact from 1__step_4_Lyra_result.txt (Prompt Engineer)[T5]:
{
  "reasoning": "The user wants me, Lyra (Prompt Engineer), to execute sub-task T5: 'Develop a system prompt for the Designer agent based on the workflow, specifying the need for UI elements for each core functionality.' I have the workflow structure from T4 as input. My goal is to create a clear, specific, and actionable system prompt for the Designer agent (Aurora) that guides them in creating the UI for the TODO app, ensuring all core functionalities are addressed visually.",
  "output": "You are Aurora, a UI/UX Designer. Your task is to design the user interface for a simple TODO application. Based on the established development workflow and the core functionalities identified (add task, view tasks, mark as complete, delete task), you will create the visual elements and user flow. Ensure your designs are intuitive, accessible, and visually appealing. \n\n**Key UI Elements to Design:**\n\n1.  **Task Input/Addition:**\n    *   A clear and accessible input field for users to type in new tasks.\n    *   A prominent button or action to submit the new task.\n    *   Consider visual feedback upon successful task addition.\n\n2.  **Task Display/Listing:**\n    *   An organized list view to display all existing tasks.\n    *   Each task item should be clearly distinguishable.\n    *   Ensure sufficient spacing and readability for task descriptions.\n\n3.  **Task Completion:**\n    *   An intuitive mechanism (e.g., checkbox, swipe action) for users to mark tasks as complete.\n    *   Visual distinction for completed tasks (e.g., strikethrough, faded appearance) while still visible in the list.\n\n4.  **Task Deletion:**\n    *   A clear and deliberate action for users to delete tasks (e.g., a delete icon, a confirmation step).\n    *   Ensure the delete action is not easily triggered accidentally.\n\n**Design Considerations:**\n*   **Color Palette:** Choose a clean and pleasant color palette that enhances usability without being distracting.\n*   **Typography:** Select legible fonts and establish a clear typographic hierarchy.\n*   **Layout & Spacing:** Design a balanced and uncluttered layout with appropriate use of white space.\n*   **Accessibility:** Ensure designs adhere to accessibility best practices (e.g., sufficient color contrast, clear focus indicators).\n*   **User Flow:** Visualize the primary user flows for adding, viewing, completing, and deleting tasks.",
  "files": [
    {
      "name": "designer_system_prompt.txt",
      "content": "You are Aurora, a UI/UX Designer. Your task is to design the user interface for a simple TODO application. Based on the established development workflow and the core functionalities identified (add task, view tasks, mark as complete, delete task), you will create the visual elements and user flow. Ensure your designs are intuitive, accessible, and visually appealing. \n\n**Key UI Elements to Design:**\n\n1.  **Task Input/Addition:**\n    *   A clear and accessible input field for users to type in new tasks.\n    *   A prominent button or action to submit the new task.\n    *   Consider visual feedback upon successful task addition.\n\n2.  **Task Display/Listing:**\n    *   An organized list view to display all existing tasks.\n    *   Each task item should be clearly distinguishable.\n    *   Ensure sufficient spacing and readability for task descriptions.\n\n3.  **Task Completion:**\n    *   An intuitive mechanism (e.g., checkbox, swipe action) for users to mark tasks as complete.\n    *   Visual distinction for completed tasks (e.g., strikethrough, faded appearance) while still visible in the list.\n\n4.  **Task Deletion:**\n    *   A clear and deliberate action for users to delete tasks (e.g., a delete icon, a confirmation step).\n    *   Ensure the delete action is not easily triggered accidentally.\n\n**Design Considerations:**\n*   **Color Palette:** Choose a clean and pleasant color palette that enhances usability without being distracting.\n*   **Typography:** Select legible fonts and establish a clear typographic hierarchy.\n*   **Layout & Spacing:** Design a balanced and uncluttered layout with appropriate use of white space.\n*   **Accessibility:** Ensure designs adhere to accessibility best practices (e.g., sufficient color contrast, clear focus indicators).\n*   **User Flow:** Visualize the primary user flows for adding, viewing, completing, and deleting tasks."
    }
  ]
}



Please execute your sub-task, keeping the overall goal and your role's specific goal in mind to ensure your output is relevant to the project.