The overall goal is: 'Create a simple TDOO app'

Your role's specific goal is: 'Knowledge transfer between spaces (agents, ...)'
Your specific sub-task is: 'Ensure all team members understand the refined TAS list, providing contextual notes on step importance and interrelations.'

The team's roles are:
    {'reasoning': "The user wants to create a JSON representation of an iterative plan for developing a simple TODO app. The plan involves several AI agents with specific roles. The JSON should outline the reasoning, roles, and ordered tasks, including dependencies, based on the provided markdown file and team member descriptions. The plan starts with parallelized Task-Agnostic Step (TAS) extraction, followed by harmonization, prompt refinement, knowledge transfer, meta-reflection, and an iterative expansion cycle. The 'Unknown' role for 'fizzlametta' needs to be addressed by assigning it the 'Meta-Reflector' role as described in Step 5 of the plan.", 'roles': [{'title': 'Task-Agnostic Step (TAS) Extractor', 'description': 'Identifies and extracts Task Agnostic Steps (TAS) towards a high-level goal.'}, {'title': 'Prompt Engineer', 'description': 'Structures workflows and ensures clarity in agent instructions, system prompt engineering.'}, {'title': 'Engineer', 'description': 'Implements designs into clean, modular, and performant code, focusing on responsive design and accessibility.'}, {'title': 'Designer', 'description': 'Generates aesthetic layouts, color palettes, typography, and UI flows, ensuring accessibility and visual balance.'}, {'title': 'Meta-Reflector', 'description': 'Analyzes collaborative dynamics, highlights blind spots, and injects meta-perspectives.'}, {'title': 'AI Tutor', 'description': 'Facilitates knowledge transfer between agents and ensures understanding of the plan and its steps.'}], 'tasks': [{'task_id': 'T1', 'task': 'Independently extract Task-Agnostic Steps (TAS) for building a simple TODO app.', 'role': 'Task-Agnostic Step (TAS) Extractor', 'name': 'GPTASe', 'requires': []}, {'task_id': 'T2', 'task': 'Independently extract Task-Agnostic Steps (TAS) for building a simple TODO app.', 'role': 'Task-Agnostic Step (TAS) Extractor', 'name': 'TASe', 'requires': []}, {'task_id': 'T3', 'task': 'Independently extract Task-Agnostic Steps (TAS) for building a simple TODO app.', 'role': 'Task-Agnostic Step (TAS) Extractor', 'name': 'uTASe', 'requires': []}, {'task_id': 'T4', 'task': 'Compare the TAS lists from GPTASe, TASe, and uTASe to identify overlaps, unique contributions, and inconsistencies. Merge into a unified TAS list.', 'role': 'Task-Agnostic Step (TAS) Extractor', 'name': 'GPTASe', 'requires': ['T1', 'T2', 'T3']}, {'task_id': 'T5', 'task': 'Engineer system prompts for TAS extractors to avoid redundancy, ensure consistent granularity, and guide iterative detail expansion.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T4']}, {'task_id': 'T6', 'task': 'Ensure all team members understand the refined TAS list, providing contextual notes on step importance and interrelations.', 'role': 'AI Tutor', 'name': 'aitutor', 'requires': ['T5']}, {'task_id': 'T7', 'task': 'Analyze collaborative dynamics, highlight blind spots, and inject meta-perspectives into the plan.', 'role': 'Meta-Reflector', 'name': 'fizzlametta', 'requires': ['T6']}, {'task_id': 'T8', 'task': 'Cycle back through Steps 1-7 to refine TAS, prompts, and collective understanding until the TODO app plan is clear, minimal, and actionable.', 'role': 'Project Manager', 'name': 'Orchestrator', 'requires': ['T7']}]}

Please use the following outputs from the other agents as your input:

Artifact from 0__step_0_initial_files.json (None)[none]:
{"files/Iterative Collaboration Plan.md": "### Iterative Collaboration Plan\n\n**Step 1: TAS Extraction (Parallelized)**\n- **GPTASe, TASe, uTASe**: Each independently extracts Task-Agnostic Steps (TAS) toward building a simple TODO app.\n  - Example TAS: 'Design user interface', 'Implement data storage', 'Create task CRUD functions', 'Test app', 'Deploy app'.\n\n**Step 2: TAS Harmonization**\n- Compare the three sets of TAS to identify overlaps, unique contributions, and inconsistencies.\n- Merge into a unified TAS list.\n\n**Step 3: Prompt Refinement (Lyra)**\n- Lyra engineers system prompts for each extractor to:\n  1. Avoid redundancy in TAS outputs.\n  2. Ensure TAS granularity is consistent (not too broad or too detailed).\n  3. Guide extractors toward iterative detail expansion.\n\n**Step 4: Knowledge Transfer (aitutor)**\n- aitutor ensures that all team members understand the refined TAS list.\n- Provides contextual notes on why steps are important and how they interrelate.\n\n**Step 5: Meta-Reflection (fizzlametta)**\n- fizzlametta analyzes the collaborative dynamics, highlights blind spots, and injects meta-perspectives (e.g., questioning assumptions, surfacing creativity).\n\n**Step 6: Iterative Expansion**\n- Cycle back through Steps 1\u20135 to refine TAS, prompts, and collective understanding until the TODO app plan is clear, minimal, and actionable."}

---

Artifact from 1__step_4_Lyra_result.txt (Prompt Engineer)[T5]:
{
  "reasoning": "The user wants me, as the Prompt Engineer (Lyra), to refine system prompts for the TAS extractors. My goal is to ensure clarity, avoid redundancy, and guide iterative detail expansion. I will analyze the unified TAS list provided by GPTASe (T4) and craft prompts that address these points. The prompts should encourage the TAS extractors to generate steps with consistent granularity and to progressively add more detail in subsequent iterations, while also avoiding overlapping or redundant steps. I will focus on the 'Prompt Refinement' step (T5) of the overall plan.",
  "output": "As the Prompt Engineer, I have analyzed the unified Task-Agnostic Steps (TAS) provided and have engineered refined system prompts for the TAS extractors. These prompts aim to guide them in avoiding redundancy, maintaining consistent granularity, and facilitating iterative detail expansion. The prompts are designed to be used in subsequent cycles of the TAS extraction process.",
  "files": [
    {
      "name": "refined_tas_extractor_prompts.json",
      "content": "[\n  {\n    \"role\": \"Task-Agnostic Step (TAS) Extractor\",\n    \"prompt_v1\": \"You are a Task-Agnostic Step (TAS) Extractor. Your goal is to identify and extract discrete, high-level steps towards achieving a given objective. Focus on the *what* and *why* of a step, not the *how*. Ensure each step is domain-agnostic. Avoid overlap with previously identified steps. Present each step as a concise action or concept. For this iteration, extract the core, essential TAS for the objective: 'Build a simple TODO app'. Ensure the granularity is consistent across all steps.\"\n  },\n  {\n    \"role\": \"Task-Agnostic Step (TAS) Extractor\",\n    \"prompt_v2\": \"You are an advanced Task-Agnostic Step (TAS) Extractor. Your objective is to refine and expand upon existing Task-Agnostic Steps (TAS) for the 'Build a simple TODO app' project. Analyze the previously provided unified TAS list. For each existing TAS, identify opportunities to add specific, actionable details or sub-steps that clarify the 'how' without becoming overly implementation-specific. Ensure the granularity remains consistent and avoid introducing redundancy. Focus on expanding the detail for each step identified in the previous iteration, progressively increasing the depth of the plan.\"\n  },\n  {\n    \"role\": \"Task-Agnostic Step (TAS) Extractor\",\n    \"prompt_v3\": \"You are a Task-Agnostic Step (TAS) Extractor specializing in iterative refinement. Your task is to further detail the Task-Agnostic Steps (TAS) for the 'Build a simple TODO app' project, building upon the previous iterations. Review the TAS and their associated details. Identify any remaining ambiguities, areas that could benefit from more specific guidance, or steps that could be broken down further while maintaining a consistent level of granularity. Ensure all steps are clearly defined, actionable at a conceptual level, and contribute to a cohesive plan. Eliminate any remaining redundancy and ensure logical flow.\"\n  }\n]"
    }
  ]
}



Please execute your sub-task, keeping the overall goal and your role's specific goal in mind to ensure your output is relevant to the project.