The overall goal is: 'Create a simple TDOO app'

Your role's specific goal is: 'Knowledge transfer between spaces (agents, ...)'
Your specific sub-task is: 'Ensure all team members understand the refined TAS list, providing contextual notes on importance and interrelations.'

The team's roles are:
    {'reasoning': 'The user wants to create a JSON representation of an iterative plan for developing a simple TODO app. The plan involves several AI agents with specific roles. The JSON should outline the reasoning, roles, and ordered tasks, including dependencies, based on the provided markdown file and team member descriptions. The plan starts with parallelized Task-Agnostic Step (TAS) extraction, followed by harmonization, prompt refinement, knowledge transfer, meta-reflection, and an iterative expansion cycle. Each task needs to be assigned to the correct role and team member, with dependencies clearly defined.', 'roles': [{'title': 'Task-Agnostic Step (TAS) extractor', 'description': 'Identifies and extracts Task-Agnostic Steps (TAS) towards a high-level goal.'}, {'title': 'Prompt Engineer', 'description': 'Structures workflows and ensures clarity in agent instructions, system prompt engineering.'}, {'title': 'Engineer', 'description': 'Implements designs into clean, modular, and performant code, focusing on responsive design and accessibility.'}, {'title': 'Designer', 'description': 'Generates aesthetic layouts, color palettes, typography, and UI flows, ensuring accessibility and visual balance.'}, {'title': 'Unknown', 'description': 'Role with an undefined goal, likely for meta-analysis or creative input.'}, {'title': 'AI Tutor', 'description': 'Facilitates knowledge transfer between agents and ensures understanding of tasks and their interrelations.'}], 'tasks': [{'task_id': 'T1', 'task': 'Independently extract Task-Agnostic Steps (TAS) towards building a simple TODO app.', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'GPTASe', 'requires': []}, {'task_id': 'T2', 'task': 'Independently extract Task-Agnostic Steps (TAS) towards building a simple TODO app.', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'TASe', 'requires': []}, {'task_id': 'T3', 'task': 'Independently extract Task-Agnostic Steps (TAS) towards building a simple TODO app.', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'uTASe', 'requires': []}, {'task_id': 'T4', 'task': 'Compare the three sets of TAS to identify overlaps, unique contributions, and inconsistencies, and merge into a unified TAS list.', 'role': 'Task-Agnostic Step (TAS) extractor', 'name': 'GPTASe', 'requires': ['T1', 'T2', 'T3']}, {'task_id': 'T5', 'task': 'Engineer system prompts for TAS extractors to avoid redundancy, ensure consistent granularity, and guide iterative detail expansion.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T4']}, {'task_id': 'T6', 'task': 'Ensure all team members understand the refined TAS list, providing contextual notes on importance and interrelations.', 'role': 'AI Tutor', 'name': 'aitutor', 'requires': ['T5']}, {'task_id': 'T7', 'task': 'Analyze collaborative dynamics, highlight blind spots, and inject meta-perspectives (e.g., questioning assumptions, surfacing creativity).', 'role': 'Unknown', 'name': 'fizzlametta', 'requires': ['T6']}, {'task_id': 'T8', 'task': 'Iteratively refine TAS, prompts, and collective understanding by cycling back through Steps 1-7 until the TODO app plan is clear, minimal, and actionable.', 'role': 'Prompt Engineer', 'name': 'Lyra', 'requires': ['T7']}]}

Please use the following outputs from the other agents as your input:

Artifact from 0__step_0_initial_files.json (None)[none]:
{"files/Iterative Collaboration Plan.md": "### Iterative Collaboration Plan\n\n**Step 1: TAS Extraction (Parallelized)**\n- **GPTASe, TASe, uTASe**: Each independently extracts Task-Agnostic Steps (TAS) toward building a simple TODO app.\n  - Example TAS: 'Design user interface', 'Implement data storage', 'Create task CRUD functions', 'Test app', 'Deploy app'.\n\n**Step 2: TAS Harmonization**\n- Compare the three sets of TAS to identify overlaps, unique contributions, and inconsistencies.\n- Merge into a unified TAS list.\n\n**Step 3: Prompt Refinement (Lyra)**\n- Lyra engineers system prompts for each extractor to:\n  1. Avoid redundancy in TAS outputs.\n  2. Ensure TAS granularity is consistent (not too broad or too detailed).\n  3. Guide extractors toward iterative detail expansion.\n\n**Step 4: Knowledge Transfer (aitutor)**\n- aitutor ensures that all team members understand the refined TAS list.\n- Provides contextual notes on why steps are important and how they interrelate.\n\n**Step 5: Meta-Reflection (fizzlametta)**\n- fizzlametta analyzes the collaborative dynamics, highlights blind spots, and injects meta-perspectives (e.g., questioning assumptions, surfacing creativity).\n\n**Step 6: Iterative Expansion**\n- Cycle back through Steps 1\u20135 to refine TAS, prompts, and collective understanding until the TODO app plan is clear, minimal, and actionable."}

---

Artifact from 1__step_4_Lyra_result.txt (Prompt Engineer)[T5]:
{
  "reasoning": "The user's overall goal is to 'Create a simple TODO app'. My role is 'Structure workflows and ensure clarity in agent instructions, system prompt engineering'. My specific sub-task is 'Engineer system prompts for TAS extractors to avoid redundancy, ensure consistent granularity, and guide iterative detail expansion.' I have received the unified TAS list from the previous step (T4). My task now is to create the system prompt for the TAS extractors (GPTASe, TASe, uTASe) that will guide them in the next iteration of detail expansion, ensuring consistency and avoiding redundancy. This prompt needs to be specific enough to guide the AI while allowing for creative extraction of details.",
  "output": "A refined system prompt for the Task-Agnostic Step (TAS) extractors, designed to guide them in iteratively expanding the details of the previously unified TAS list for the TODO app. The prompt emphasizes avoiding redundancy, maintaining consistent granularity, and focusing on actionable, specific details for each TAS.",
  "files": [
    {
      "name": "refined_tas_extractor_prompt.txt",
      "content": "You are a Task-Agnostic Step (TAS) extractor. Your goal is to identify and articulate granular, actionable steps towards a high-level objective. \n\nBased on the previously established unified list of Task-Agnostic Steps (TAS) for building a simple TODO app, your task is to:\n\n1.  **Iteratively Expand Details:** For each TAS in the provided list, elaborate on its sub-steps, necessary components, key considerations, and potential challenges. Think of this as breaking down each high-level step into more specific, actionable micro-tasks.\n2.  **Ensure Consistent Granularity:** Maintain a consistent level of detail across all TAS. Avoid steps that are too broad or too narrow. Each elaborated step should represent a distinct, manageable piece of work.\n3.  **Avoid Redundancy:** As you expand, be mindful of overlapping details or duplicated efforts across different TAS. If a sub-step naturally fits under multiple parent TAS, identify the most appropriate primary location or clearly state the dependency.\n4.  **Focus on Actionability:** Each elaborated step should be clear enough to guide implementation or further design. Use precise language.\n5.  **Maintain Task-Agnosticism:** Describe steps in terms of *what* needs to be done, not *how* it will be implemented with specific technologies (e.g., 'Implement data storage' rather than 'Use SQLite for data storage').\n\n**Input:** A JSON array of unified Task-Agnostic Steps (TAS).\n\n**Output:** A JSON array of detailed TAS, where each original TAS is expanded with a 'sub_steps' field containing an array of more granular, actionable steps. Ensure the output JSON is valid and adheres to the original schema, with the addition of the 'sub_steps' array where applicable.\n\n**Example of expected expansion for 'Implement Core Functionality':**\n\n*   **Original TAS:** Implement Core Functionality\n*   **Expanded Sub-steps:**\n    *   'Develop function to add a new task with title and description.'\n    *   'Implement logic to toggle task completion status.'\n    *   'Create function to retrieve all tasks.'\n    *   'Develop function to delete a task by its ID.'\n    *   'Ensure data is saved after each modification (if persistence is handled here).'\n\nProceed with expanding the following TAS list:"
    }
  ]
}



Please execute your sub-task, keeping the overall goal and your role's specific goal in mind to ensure your output is relevant to the project.