[{"id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "name": "Define Requirements", "description": "Clearly articulate and document the functional and non-functional requirements for the application. This involves understanding what the application should do, who the users are, and any constraints.", "category": "Init", "purpose": "Establish a clear understanding of the project's scope and objectives.", "keywords": ["requirements", "scope", "definition", "planning"], "applicability_notes": "Essential for any project, regardless of domain. Helps in setting clear expectations and guiding subsequent development.", "examples_of_usage": ["Defining user stories for a web app.", "Documenting performance benchmarks for a system.", "Outlining the features of a mobile application."], "typical_inputs": ["High-level goal statement"], "typical_outputs": ["Detailed requirements document", "User stories", "Acceptance criteria"]}, {"id": "b2c3d4e5-f6a7-8901-2345-67890abcdef1", "name": "Design Data Model", "description": "Structure and define the data that the application will manage. This includes identifying entities, their attributes, and the relationships between them.", "category": "Init", "purpose": "Organize and define the application's data structure.", "keywords": ["data model", "database design", "schema", "entities", "relationships"], "applicability_notes": "Crucial for any application that stores or manipulates data. The design impacts performance, scalability, and maintainability.", "examples_of_usage": ["Designing tables for a relational database.", "Defining document structures for a NoSQL database.", "Creating an entity-relationship diagram (ERD)."], "typical_inputs": ["Defined requirements"], "typical_outputs": ["Data schema", "Entity definitions", "Relationship diagrams"]}, {"id": "c3d4e5f6-a7b8-9012-3456-7890abcdef12", "name": "Develop User Interface", "description": "Create the visual elements and interactive components that users will interact with. This involves designing the layout, navigation, and user experience.", "category": "Development", "purpose": "Build the front-end of the application for user interaction.", "keywords": ["UI design", "front-end development", "user experience", "layout", "components"], "applicability_notes": "Applies to applications with a user-facing component. The complexity can vary greatly depending on the application's nature.", "examples_of_usage": ["Creating HTML/CSS for a web page.", "Designing screen flows for a mobile app.", "Implementing interactive elements in a desktop application."], "typical_inputs": ["Data model", "User interface mockups/wireframes"], "typical_outputs": ["Interactive user interface", "Front-end code"]}, {"id": "d4e5f6a7-b8c9-0123-4567-890abcdef123", "name": "Implement Core Logic", "description": "Write the backend code that handles the application's business logic, data processing, and interactions with the data model.", "category": "Development", "purpose": "Implement the functional behavior of the application.", "keywords": ["backend development", "business logic", "data processing", "API development"], "applicability_notes": "Essential for applications requiring data manipulation or complex operations. This is often the 'engine' of the application.", "examples_of_usage": ["Writing functions to process user input.", "Developing algorithms for data analysis.", "Creating API endpoints for data retrieval."], "typical_inputs": ["Data model", "Application requirements"], "typical_outputs": ["Backend code", "Application logic", "APIs"]}, {"id": "e5f6a7b8-c9d0-1234-5678-90abcdef1234", "name": "Integrate Components", "description": "Connect the different parts of the application, such as the front-end, back-end, and database, to ensure they work together seamlessly.", "category": "Development", "purpose": "Ensure all parts of the application work together cohesively.", "keywords": ["integration", "system integration", "connectivity", "API integration"], "applicability_notes": "Key for any application composed of multiple modules or services. Ensures data flows correctly between components.", "examples_of_usage": ["Connecting a web front-end to a REST API.", "Linking a mobile app to a cloud backend.", "Integrating third-party services."], "typical_inputs": ["Developed UI", "Implemented core logic", "Defined data model"], "typical_outputs": ["Integrated application", "Working system"Загрузка ..."]}, {"id": "f6a7b8c9-d0e1-2345-6789-0abcdef12345", "name": "Test Application", "description": "Verify that the application functions as expected and meets the defined requirements. This includes unit testing, integration testing, and user acceptance testing.", "category": "Testing", "purpose": "Ensure the application is functional, reliable, and meets quality standards.", "keywords": ["testing", "quality assurance", "debugging", "validation", "verification"], "applicability_notes": "A critical step in the software development lifecycle to identify and fix defects before release.", "examples_of_usage": ["Writing unit tests for individual functions.", "Performing end-to-end testing of user flows.", "Conducting performance and security testing."], "typical_inputs": ["Integrated application", "Test cases", "Requirements document"], "typical_outputs": ["Test reports", "Bug reports", "Validated application"]}, {"id": "a7b8c9d0-e1f2-3456-7890-abcdef123456", "name": "Deploy Application", "description": "Make the application available to end-users. This involves packaging the application and deploying it to a production environment.", "category": "Deployment", "purpose": "Release the application to its intended users.", "keywords": ["deployment", "release", "production environment", "hosting"], "applicability_notes": "The final step in delivering a functional application. The process varies based on the target platform (web, mobile, desktop).", "examples_of_usage": ["Deploying a web application to a cloud server.", "Publishing a mobile app to an app store.", "Installing a desktop application on user machines."], "typical_inputs": ["Tested and validated application", "Deployment environment"], "typical_outputs": ["Live application", "Deployment logs"]}]